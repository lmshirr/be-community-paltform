# version: "3"
# services:
#   node:
#     env_file:
#         - .env
#     image: node:16-alpine3.11
#     container_name: community_platform_node
#     working_dir: /home/node/app
#     volumes:
#       - ./app:/home/node/app
#       - ./node.sh:/home/node/node.sh
#     command: npm run ${ENVIRONMENT}
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       ENVIRONMENT: ${ENVIRONMENT}
#       BASE_URL: ${BASE_URL}
#     ports:
#       - ${PORT_API}:5000
#     links:
#       - database
#     networks:
#       - nodenetwork

#   database:
#     image: postgres
#     container_name: community_platform_db
#     restart: always
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#     expose:
#       - 5432
#     ports:
#       - ${PORT_DATABASE}:5432
#     networks:
#       - nodenetwork
  
#   adminer:
#     image: adminer
#     container_name: community_platform_adminer
#     restart: always
#     ports:
#       - ${PORT_ADMINER}:8080
#     links:
#       - database
#     networks:
#       - nodenetwork

# networks: 
#   nodenetwork:
#     driver: bridge
#     external:
#       name: external-node

version: "3.8"
services:
  community-platform:
    env_file:
      - .env.production
    image: community-platform-be:1.0
    container_name: community-platform
    ports:
      - 5000:5000
    networks:
      - community-platform-network
    depends_on:
      - postgres
  postgres:
    image: postgres:13.4-alpine
    ports:
      - 5432:5432
    container_name: postgres
    env_file:
      - .env.production
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - "pgdata:/var/lib/postgresql/data"
    networks:
      - community-platform-network
volumes:
  pgdata:
networks:
  community-platform-network:
    name: community-platform-network